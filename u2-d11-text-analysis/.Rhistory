options(htmltools.preserve.raw = FALSE)
artist %>%
distinct(album, track_title) %>%
datatable(options = list(dom = "p"))
artist_lyrics <- artist %>%
unnest_tokens(word, lyric)
artist_lyrics
artist_lyrics %>%
count(word, sort = TRUE)
artist_lyrics %>%
anti_join(stop_words) %>%
count(word, sort = TRUE)
artist_lyrics %>%
anti_join(stop_words) %>%
count(word)%>%
slice_max(20) %>%
ggplot(aes(fct_reorder(word, n), n)) +
geom_col() +
labs(title = "Frequency of Artists lyrics",
y = "",
x = "") +
coord_flip()
artist_lyrics %>%
anti_join(stop_words) %>%
count(word, sort = TRUE)
knitr::opts_chunk$set(eval = FALSE)
library(tidyverse)
library(tidytext)
library(genius) #Song Lyrics
library(wordcloud)# Making wordclouds
library(DT)
library(stopwords)
text <- c("Take me out tonight",
"Where there's music and there's people",
"And they're young and alive",
"Driving in your car",
"I never never want to go home",
"Because I haven't got one",
"Anymore")
text
text_df <- tibble(line = 1:7, text = text)
text_df
text_df %>%
unnest_tokens(word, text)
listening <- read_csv("data/listening.csv")
listening
listening %>%
unnest_tokens(word, songs) %>%
count(word, sort = TRUE)
get_stopwords()
get_stopwords(language = "es")
get_stopwords(source = "smart")
listening %>%
unnest_tokens(word, songs) %>%
anti_join(stop_words) %>%
filter(!(word %in% c("1", "2", "3", "4", "5"))) %>%
count(word, sort = TRUE)
top20_songs <- listening %>%
unnest_tokens(word, songs) %>%
anti_join(stop_words) %>%
filter(
!(word %in% c("1", "2", "3", "4", "5"))
) %>%
count(word) %>%
top_n(20)
top20_songs %>%
arrange(desc(n))
# Chunk 1
knitr::opts_chunk$set(eval = FALSE)
# Chunk 2: packages
library(tidyverse)
library(tidytext)
library(genius) #Song Lyrics
library(wordcloud)# Making wordclouds
library(DT)
library(stopwords)
# Chunk 3
text <- c("Take me out tonight",
"Where there's music and there's people",
"And they're young and alive",
"Driving in your car",
"I never never want to go home",
"Because I haven't got one",
"Anymore")
text
# Chunk 4
text_df <- tibble(line = 1:7, text = text)
text_df
# Chunk 5
text_df %>%
unnest_tokens(word, text)
# Chunk 6
listening <- read_csv("data/listening.csv")
listening
# Chunk 7
listening %>%
unnest_tokens(word, songs) %>%
count(word, sort = TRUE)
# Chunk 8
get_stopwords()
# Chunk 9
get_stopwords(language = "es")
# Chunk 10
get_stopwords(source = "smart")
# Chunk 1
knitr::opts_chunk$set(eval = FALSE)
# Chunk 2: packages
library(tidyverse)
library(tidytext)
library(genius) #Song Lyrics
library(wordcloud)# Making wordclouds
library(DT)
library(stopwords)
# Chunk 3
text <- c("Take me out tonight",
"Where there's music and there's people",
"And they're young and alive",
"Driving in your car",
"I never never want to go home",
"Because I haven't got one",
"Anymore")
text
# Chunk 4
text_df <- tibble(line = 1:7, text = text)
text_df
# Chunk 5
text_df %>%
unnest_tokens(word, text)
# Chunk 6
listening <- read_csv("data/listening.csv")
listening
# Chunk 7
listening %>%
unnest_tokens(word, songs) %>%
count(word, sort = TRUE)
# Chunk 8
get_stopwords()
# Chunk 9
get_stopwords(language = "es")
# Chunk 10
get_stopwords(source = "smart")
# Chunk 11
listening %>%
unnest_tokens(word, songs) %>%
anti_join(stop_words) %>%
filter(!(word %in% c("1", "2", "3", "4", "5"))) %>%
count(word, sort = TRUE)
# Chunk 12
top20_songs <- listening %>%
unnest_tokens(word, songs) %>%
anti_join(stop_words) %>%
filter(
!(word %in% c("1", "2", "3", "4", "5"))
) %>%
count(word) %>%
top_n(20)
top20_songs %>%
arrange(desc(n))
top20_songs %>%
ggplot(aes(x = fct_reorder(word, n), y = n)) +
geom_col() +
labs(x = "Common words", y = "Count") +
coord_flip()
set.seed(1234)
wordcloud(words = top20_songs$word,
freq = top20_songs$n,
colors = brewer.pal(5,"Blues"),
random.order = FALSE)
#Note: You may need to increase the size of your plot area to get this to display properly
str_remove()
?str_remove_all
View(artist)
?str_replace_all
artist_albums <- tribble(
~artist,      ~album,
"Taylor Swift", "Red (Taylor’s Version)")
artist <- artist_albums %>%
add_genius(artist, album, "album")
# attach the lyrics (the genius functions no longer supported)
artist_lyrics <- read_csv('data/artistlyrics.csv')
artist <- artist %>%
mutate(track_title = str_squish(track_title))%>%
left_join(artist_lyrics,by="track_title") %>%
str_replace_all(lyric,c("Verse","Chorus","Bridge")
artist_albums <- tribble(
~artist,      ~album,
"Taylor Swift", "Red (Taylor’s Version)")
artist <- artist_albums %>%
add_genius(artist, album, "album")
# attach the lyrics (the genius functions no longer supported)
artist_lyrics <- read_csv('data/artistlyrics.csv')
artist <- artist %>%
mutate(track_title = str_squish(track_title))%>%
left_join(artist_lyrics,by="track_title") %>%
str_replace_all(lyric,c("Verse","Chorus","Bridge"))
# Chunk 1
library(tidyverse)
library(tidytext)
library(genius)
library(wordcloud)
library(DT)
library(stopwords)
conflicted::conflict_prefer("filter","dplyr")
# Chunk 2
text <- c("Take me out tonight",
"Where there's music and there's people",
"And they're young and alive",
"Driving in your car",
"I never never want to go home",
"Because I haven't got one",
"Anymore")
text
# Chunk 3
text_df <- tibble(line = 1:7, text = text)
text_df
# Chunk 4
text_df %>%
unnest_tokens(word, text)
# Chunk 5
listening <- read_csv("data/listening.csv")
listening
# Chunk 6
listening %>%
unnest_tokens(word, songs) %>%
count(word, sort = TRUE)
# Chunk 7
get_stopwords()
# Chunk 8
get_stopwords(language = "es")
# Chunk 9
get_stopwords(source = "smart")
# Chunk 10
listening %>%
unnest_tokens(word, songs) %>%
anti_join(stop_words) %>%                           #<<
dplyr::filter(!(word %in% c("1", "2", "3", "4", "5"))) %>% #<<
count(word, sort = TRUE)
# Chunk 11
top20_songs <- listening %>%
unnest_tokens(word, songs) %>%
anti_join(stop_words) %>%
dplyr::filter(
!(word %in% c("1", "2", "3", "4", "5"))
) %>%
count(word) %>%
top_n(20)
# Chunk 12
top20_songs %>%
arrange(desc(n))
# Chunk 13
top20_songs %>%
ggplot(aes(x = fct_reorder(word, n), y = n)) +
geom_col() +
labs(x = "Common words", y = "Count") +
coord_flip()
# Chunk 15
set.seed(1234)
wordcloud(words = top20_songs$word,
freq = top20_songs$n,
colors = brewer.pal(5,"Blues"),
random.order = FALSE,
rot.per = 0.35,
scale = c(2, 0.5))
artist_albums <- tribble(
~artist,      ~album,
"Taylor Swift", "Red (Taylor’s Version)")
artist <- artist_albums %>%
add_genius(artist, album, "album")
# attach the lyrics (the genius functions no longer supported)
artist_lyrics <- read_csv('data/artistlyrics.csv')
artist <- artist %>%
mutate(track_title = str_squish(track_title))%>%
left_join(artist_lyrics,by="track_title") %>%
str_replace_all(lyric,c("Verse","Chorus","Bridge"))
?str_replace_all
artist_albums <- tribble(
~artist,      ~album,
"Taylor Swift", "Red (Taylor’s Version)")
artist <- artist_albums %>%
add_genius(artist, album, "album")
# attach the lyrics (the genius functions no longer supported)
artist_lyrics <- read_csv('data/artistlyrics.csv')
artist <- artist %>%
mutate(track_title = str_squish(track_title))%>%
left_join(artist_lyrics,by="track_title") %>%
str_replace_all(lyric,c("Verse","Chorus","Bridge"),"")
artist_albums <- tribble(
~artist,      ~album,
"Taylor Swift", "Red (Taylor’s Version)")
artist <- artist_albums %>%
add_genius(artist, album, "album")
# attach the lyrics (the genius functions no longer supported)
artist_lyrics <- read_csv('data/artistlyrics.csv')
artist <- artist %>%
mutate(track_title = str_squish(track_title))%>%
left_join(artist_lyrics,by="track_title") %>%
str_replace_all(lyric,"Verse"|"Chorus"|"Bridge","")
artist_albums <- tribble(
~artist,      ~album,
"Taylor Swift", "Red (Taylor’s Version)")
artist <- artist_albums %>%
add_genius(artist, album, "album")
# attach the lyrics (the genius functions no longer supported)
artist_lyrics <- read_csv('data/artistlyrics.csv')
artist <- artist %>%
mutate(track_title = str_squish(track_title))%>%
left_join(artist_lyrics,by="track_title") %>%
str_replace_all(lyric,"Verse|Chorus|Bridge","")
artist_albums <- tribble(
~artist,      ~album,
"Taylor Swift", "Red (Taylor’s Version)")
artist <- artist_albums %>%
add_genius(artist, album, "album")
# attach the lyrics (the genius functions no longer supported)
artist_lyrics <- read_csv('data/artistlyrics.csv')
View(artist_lyrics)
artist_albums <- tribble(
~artist,      ~album,
"Taylor Swift", "Red (Taylor’s Version)")
artist <- artist_albums %>%
add_genius(artist, album, "album")
# attach the lyrics (the genius functions no longer supported)
artist_lyrics <- read_csv('data/artistlyrics.csv')
artist <- artist %>%
mutate(track_title = str_squish(track_title))%>%
left_join(artist_lyrics,by="track_title") %>%
mutate(lyric = str_replace_all(lyric,"Verse|Chorus|Bridge",""))
View(artist)
artist$lyric
artist_albums <- tribble(
~artist,      ~album,
"Taylor Swift", "Red (Taylor’s Version)")
artist <- artist_albums %>%
add_genius(artist, album, "album")
# attach the lyrics (the genius functions no longer supported)
artist_lyrics <- read_csv('data/artistlyrics.csv')
artist <- artist %>%
mutate(track_title = str_squish(track_title))%>%
left_join(artist_lyrics,by="track_title") %>%
mutate(lyric = str_replace_all(lyric,"\[*\]|\\\n",""))
artist_albums <- tribble(
~artist,      ~album,
"Taylor Swift", "Red (Taylor’s Version)")
artist <- artist_albums %>%
add_genius(artist, album, "album")
# attach the lyrics (the genius functions no longer supported)
artist_lyrics <- read_csv('data/artistlyrics.csv')
artist <- artist %>%
mutate(track_title = str_squish(track_title))%>%
left_join(artist_lyrics,by="track_title") %>%
mutate(lyric = str_replace_all(lyric,"\\[^\\]",""))
View(artist)
artist_albums <- tribble(
~artist,      ~album,
"Taylor Swift", "Red (Taylor’s Version)")
artist <- artist_albums %>%
add_genius(artist, album, "album")
# attach the lyrics (the genius functions no longer supported)
artist_lyrics <- read_csv('data/artistlyrics.csv')
artist <- artist %>%
mutate(track_title = str_squish(track_title))%>%
left_join(artist_lyrics,by="track_title") %>%
mutate(lyric = str_replace_all(lyric,"\\[.*\\]",""))
View(artist)
artist$lyric
?str_remove_all
artist_albums <- tribble(
~artist,      ~album,
"Taylor Swift", "Red (Taylor’s Version)")
artist <- artist_albums %>%
add_genius(artist, album, "album")
# attach the lyrics (the genius functions no longer supported)
artist_lyrics <- read_csv('data/artistlyrics.csv')
artist <- artist %>%
mutate(track_title = str_squish(track_title))%>%
left_join(artist_lyrics,by="track_title") %>%
mutate(lyric = str_replace_all(lyric,"\\[.*\\]",""),
lyric = str_squish(lyric))
artist$lyric
artist_albums <- tribble(
~artist,      ~album,
"Taylor Swift", "Red (Taylor’s Version)")
artist <- artist_albums %>%
add_genius(artist, album, "album")
# attach the lyrics (the genius functions no longer supported)
artist_lyrics <- read_csv('data/artistlyrics.csv')
artist <- artist %>%
mutate(track_title = str_squish(track_title))%>%
left_join(artist_lyrics,by="track_title") %>%
mutate(lyric = str_replace_all(lyric,"\\\n|\\[.*\\]",""),
lyric = str_squish(lyric))
View(artist)
artist$lyric
artist$lyric[1]
artist$lyric
# Chunk 1
library(tidyverse)
library(tidytext)
library(genius)
library(wordcloud)
library(DT)
library(stopwords)
conflicted::conflict_prefer("filter","dplyr")
# Chunk 2
text <- c("Take me out tonight",
"Where there's music and there's people",
"And they're young and alive",
"Driving in your car",
"I never never want to go home",
"Because I haven't got one",
"Anymore")
text
# Chunk 3
text_df <- tibble(line = 1:7, text = text)
text_df
# Chunk 4
text_df %>%
unnest_tokens(word, text)
# Chunk 5
listening <- read_csv("data/listening.csv")
listening
# Chunk 6
listening %>%
unnest_tokens(word, songs) %>%
count(word, sort = TRUE)
# Chunk 7
get_stopwords()
# Chunk 8
get_stopwords(language = "es")
# Chunk 9
get_stopwords(source = "smart")
# Chunk 10
listening %>%
unnest_tokens(word, songs) %>%
anti_join(stop_words) %>%                           #<<
dplyr::filter(!(word %in% c("1", "2", "3", "4", "5"))) %>% #<<
count(word, sort = TRUE)
# Chunk 11
top20_songs <- listening %>%
unnest_tokens(word, songs) %>%
anti_join(stop_words) %>%
dplyr::filter(
!(word %in% c("1", "2", "3", "4", "5"))
) %>%
count(word) %>%
top_n(20)
# Chunk 12
top20_songs %>%
arrange(desc(n))
# Chunk 13
top20_songs %>%
ggplot(aes(x = fct_reorder(word, n), y = n)) +
geom_col() +
labs(x = "Common words", y = "Count") +
coord_flip()
# Chunk 15
set.seed(1234)
wordcloud(words = top20_songs$word,
freq = top20_songs$n,
colors = brewer.pal(5,"Blues"),
random.order = FALSE,
rot.per = 0.35,
scale = c(2, 0.5))
# Chunk 18
artist_albums <- tribble(
~artist,      ~album,
"Taylor Swift", "Red (Taylor’s Version)")
artist <- artist_albums %>%
add_genius(artist, album, "album")
# attach the lyrics (the genius functions no longer supported)
artist_lyrics <- read_csv('data/artistlyrics.csv')
artist <- artist %>%
mutate(track_title = str_squish(track_title))%>%
left_join(artist_lyrics,by="track_title") %>%
mutate(lyric = str_replace_all(lyric,"\\\n|\\[.*\\]",""),
lyric = str_squish(lyric))
# Chunk 19
options(htmltools.preserve.raw = FALSE)
artist %>%
distinct(album, track_title) %>%
datatable(options = list(dom = "p"))
# Chunk 20
artist_lyrics <- artist %>%
unnest_tokens(word, lyric)
artist_lyrics
artist_lyrics %>%
anti_join(stop_words) %>%
count(word, sort = TRUE)
artist_lyrics %>%
anti_join(stop_words) %>%
count(word)%>%
slice_max(20) %>%
ggplot(aes(fct_reorder(word, n), n)) +
geom_col() +
labs(title = "Frequency of Artists lyrics",
y = "",
x = "") +
coord_flip()
artist_lyrics %>%
anti_join(stop_words) %>%
count(word, sort = TRUE)
?str_squish
artist_lyrics %>%
anti_join(stop_words) %>%
count(word)%>%
top_n(20) %>%
ggplot(aes(fct_reorder(word, n), n)) +
geom_col() +
labs(title = "Frequency of Artists lyrics",
y = "",
x = "") +
coord_flip()
